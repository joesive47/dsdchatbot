from flask import Flask, jsonify, request
from flask_cors import CORS
import os
from datetime import datetime

app = Flask(__name__)
CORS(app)

# ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°-‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ
qa_data = {
    '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ': '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö LMS ‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÇ‡∏î‡∏¢ Railway! üöÇ',
    'hello': 'Hello! Welcome to Railway-powered LMS! üöÄ',
    '‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á': '‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢:\n- ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Python\n- ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö UI/UX\n- ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n- ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå\n- ‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•',
    '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà': '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£:\n- ‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô: 2,500-5,000 ‡∏ö‡∏≤‡∏ó\n- ‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏Ç‡∏±‡πâ‡∏ô‡∏Å‡∏•‡∏≤‡∏á: 5,000-8,000 ‡∏ö‡∏≤‡∏ó\n- ‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á: 8,000-12,000 ‡∏ö‡∏≤‡∏ó',
    '‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô': '‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡πÜ:\n1. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à\n2. ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô"\n3. ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß\n4. ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô\n5. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
    '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà': '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á:\nüìû ‡πÇ‡∏ó‡∏£: 02-123-4567\nüìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•: info@lms.com\nüí¨ Line: @lmssupport\nüïí ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£: ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå-‡∏®‡∏∏‡∏Å‡∏£‡πå 9:00-18:00',
    'railway ‡∏ó‡∏î‡∏™‡∏≠‡∏ö': '‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°! Railway ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥ üöÇ ‡πÑ‡∏°‡πà‡∏°‡∏µ cold start ‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡πÄ‡∏£‡πá‡∏ß‡∏°‡∏≤‡∏Å!',
    '‡∏ó‡∏î‡∏™‡∏≠‡∏ö railway': '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏à‡∏≤‡∏Å Railway! üöÇ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ:\n‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ cold start\n‚úÖ ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡πÄ‡∏£‡πá‡∏ß\n‚úÖ SSL ‡∏ü‡∏£‡∏µ\n‚úÖ Deploy ‡∏á‡πà‡∏≤‡∏¢\n\n‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≠‡∏î 24/7!',
    '‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì': '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤ üòä',
    'thank you': 'You\'re welcome! Feel free to ask anytime! üòä'
}

@app.route('/')
def home():
    railway_info = {
        'deployment_id': os.environ.get('RAILWAY_DEPLOYMENT_ID', 'local'),
        'environment': os.environ.get('RAILWAY_ENVIRONMENT', 'development'),
        'service_id': os.environ.get('RAILWAY_SERVICE_ID', 'local')
    }
    
    return f'''
    <!DOCTYPE html>
    <html>
    <head>
        <title>üöÇ Railway Flask Chatbot</title>
        <meta charset="UTF-8">
        <style>
            body {{ font-family: Arial, sans-serif; max-width: 800px; margin: 50px auto; padding: 20px; }}
            .header {{ text-align: center; margin-bottom: 30px; }}
            .success {{ color: #28a745; }}
            .info {{ background: #f0f8ff; padding: 20px; border-radius: 8px; margin: 20px 0; }}
            .endpoints {{ background: #f8f9fa; padding: 15px; border-radius: 5px; }}
            pre {{ background: #e9ecef; padding: 10px; border-radius: 3px; overflow-x: auto; }}
        </style>
    </head>
    <body>
        <div class="header">
            <h1>üöÇ Railway Flask Chatbot API</h1>
            <p class="success">‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥‡∏ö‡∏ô Railway!</p>
        </div>
        
        <div class="info">
            <h3>üìä Railway Information:</h3>
            <ul>
                <li><strong>Deployment ID:</strong> {railway_info['deployment_id']}</li>
                <li><strong>Environment:</strong> {railway_info['environment']}</li>
                <li><strong>Service ID:</strong> {railway_info['service_id']}</li>
                <li><strong>No Cold Start:</strong> ‚úÖ Yes</li>
                <li><strong>SSL/HTTPS:</strong> ‚úÖ Enabled</li>
            </ul>
        </div>
        
        <div class="endpoints">
            <h3>üîó Available Endpoints:</h3>
            <ul>
                <li><a href="/api/health">GET /api/health</a> - Health check</li>
                <li><strong>POST /api/chat</strong> - Chat endpoint</li>
                <li><a href="/api/stats">GET /api/stats</a> - Statistics</li>
            </ul>
        </div>
        
        <div class="info">
            <h3>üí¨ Test Chat API:</h3>
            <p>‡∏™‡πà‡∏á POST request ‡πÑ‡∏õ‡∏ó‡∏µ‡πà <code>/api/chat</code> ‡∏î‡πâ‡∏ß‡∏¢ JSON:</p>
            <pre>{{"message": "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ", "user_id": "test", "session_id": "test_session"}}</pre>
            
            <h4>‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:</h4>
            <ul>
                <li>"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ" - ‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢</li>
                <li>"‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á" - ‡∏î‡∏π‡∏Ñ‡∏≠‡∏£‡πå‡∏™</li>
                <li>"‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà" - ‡∏î‡∏π‡∏£‡∏≤‡∏Ñ‡∏≤</li>
                <li>"railway ‡∏ó‡∏î‡∏™‡∏≠‡∏ö" - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Railway</li>
            </ul>
        </div>
        
        <div style="text-align: center; margin-top: 30px;">
            <p>üöÇ Powered by Railway - No Cold Start, Always Fast!</p>
        </div>
    </body>
    </html>
    '''

@app.route('/api/health', methods=['GET'])
def health():
    return jsonify({
        'status': 'healthy',
        'message': 'Railway Flask Chatbot is running! üöÇ',
        'timestamp': datetime.now().isoformat(),
        'environment': os.environ.get('RAILWAY_ENVIRONMENT', 'development'),
        'railway_info': {
            'deployment_id': os.environ.get('RAILWAY_DEPLOYMENT_ID', 'local'),
            'service_id': os.environ.get('RAILWAY_SERVICE_ID', 'local'),
            'no_cold_start': True
        },
        'features': [
            'No Cold Start',
            'Fast Response',
            'SSL/HTTPS',
            'Auto Deploy',
            'CORS Enabled'
        ],
        'endpoints': ['/api/health', '/api/chat', '/api/stats', '/']
    })

@app.route('/api/chat', methods=['POST'])
def chat():
    try:
        data = request.get_json()
        if not data:
            return jsonify({
                'error': 'No JSON data provided',
                'response': '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON',
                'timestamp': datetime.now().isoformat()
            }), 400
        
        message = data.get('message', '').strip()
        user_id = data.get('user_id', 'anonymous')
        session_id = data.get('session_id', 'default')
        
        if not message:
            return jsonify({
                'error': 'Message is required',
                'response': '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á',
                'timestamp': datetime.now().isoformat()
            }), 400
        
        # ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
        start_time = datetime.now()
        response_text = find_answer(message)
        end_time = datetime.now()
        
        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö
        processing_time = (end_time - start_time).total_seconds() * 1000
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô HTML response ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        is_html = bool('\n' in response_text)
        
        return jsonify({
            'response': response_text,
            'html_response': is_html,
            'user_id': user_id,
            'session_id': session_id,
            'timestamp': datetime.now().isoformat(),
            'processing_time_ms': round(processing_time, 2),
            'railway_info': {
                'deployment_id': os.environ.get('RAILWAY_DEPLOYMENT_ID', 'local'),
                'no_cold_start': True,
                'fast_response': True
            }
        })
        
    except Exception as e:
        return jsonify({
            'error': 'Internal server error',
            'response': '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Railway',
            'timestamp': datetime.now().isoformat(),
            'details': str(e)
        }), 500

@app.route('/api/stats', methods=['GET'])
def stats():
    return jsonify({
        'total_questions': len(qa_data),
        'available_keywords': list(qa_data.keys()),
        'timestamp': datetime.now().isoformat(),
        'railway_info': {
            'platform': 'Railway',
            'deployment_id': os.environ.get('RAILWAY_DEPLOYMENT_ID', 'local'),
            'uptime': '24/7',
            'cold_start': False
        }
    })

def find_answer(user_input):
    """‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°"""
    user_input_lower = user_input.lower()
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô
    for question, answer in qa_data.items():
        if question.lower() in user_input_lower:
            return answer
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
    if '‡∏Ñ‡∏≠‡∏£‡πå‡∏™' in user_input or '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô' in user_input:
        return qa_data['‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á']
    elif '‡∏£‡∏≤‡∏Ñ‡∏≤' in user_input or '‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà' in user_input:
        return qa_data['‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà']
    elif '‡∏™‡∏°‡∏±‡∏Ñ‡∏£' in user_input:
        return qa_data['‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô']
    elif '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠' in user_input:
        return qa_data['‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà']
    elif 'railway' in user_input_lower or '‡∏ó‡∏î‡∏™‡∏≠‡∏ö' in user_input:
        return qa_data['railway ‡∏ó‡∏î‡∏™‡∏≠‡∏ö']
    else:
        return '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡∏â‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì üòÖ\n\n‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡∏ß‡πà‡∏≤:\n- "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ"\n- "‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á"\n- "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà"\n- "railway ‡∏ó‡∏î‡∏™‡∏≠‡∏ö"\n\nüöÇ Powered by Railway'

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 5000))
    
    print("üöÇ" + "="*50)
    print("üöÇ Starting Railway Flask Chatbot...")
    print(f"üì° Port: {port}")
    print(f"üåç Environment: {os.environ.get('RAILWAY_ENVIRONMENT', 'local')}")
    print("‚úÖ No Cold Start")
    print("‚úÖ Fast Response")
    print("‚úÖ CORS Enabled")
    print("üöÇ" + "="*50)
    
    app.run(
        host='0.0.0.0',
        port=port,
        debug=False
    )